{"version":3,"file":"static/js/718.3455748d.chunk.js","mappings":"wNAAO,IAAMA,EAAU,mCACVC,EAAW,+BACXC,EAAW,mC,2ICAXC,E,QAAOC,GAAAA,GAAH,6C,SCAJC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,SAACH,EAAD,UACGG,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,S,UCgBjB,EAjBgB,WACd,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,EAAUC,OAAOH,EAASI,MAAMP,IAEtC,GAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOV,EAAP,KAAgBW,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACMC,EAAAA,EAAAA,IAAgBP,GADtB,OACXQ,EADW,OAEjBJ,EAAWI,EAASC,KAAKC,SAFR,2CAAH,qDAIhBJ,MACC,CAACN,KAEG,SAACR,EAAD,CAAcC,QAASA,M,uOCd1BkB,EAAWC,IAAAA,OAAa,CAC5BC,QAASzB,EAAAA,GACT0B,OAAQ,CACNC,QAAS5B,EAAAA,MAIA6B,EAAY,mCAAG,6GAEDL,EAASM,IAAI,uBAFZ,cAElBT,EAFkB,yBAIjBA,EAASC,MAJQ,gCAMxBS,EAAAA,GAAAA,MAAY,KAAMC,SANM,yDAAH,qDAUZC,EAAS,mCAAG,WAAMzB,GAAN,gGAEEgB,EAASM,IAAT,iBAAuBtB,IAFzB,cAEfa,EAFe,yBAIdA,GAJc,gCAMrBU,EAAAA,GAAAA,MAAY,KAAMC,SANG,yDAAH,sDAUTZ,EAAe,mCAAG,WAAMZ,GAAN,gGAEJgB,EAASM,IAAT,iBAAuBtB,EAAvB,aAFI,cAErBa,EAFqB,yBAIpBA,GAJoB,gCAM3BU,EAAAA,GAAAA,MAAY,KAAMC,SANS,yDAAH,sDAUfE,EAAe,mCAAG,WAAM1B,GAAN,gGAEJgB,EAASM,IAAT,iBAAuBtB,EAAvB,aAFI,cAErBa,EAFqB,yBAIpBA,GAJoB,gCAM3BU,EAAAA,GAAAA,MAAY,KAAMC,SANS,yDAAH,sDAUfG,EAAc,mCAAG,WAAMC,GAAN,gGAEHZ,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNS,MAAAA,KAJsB,cAEpBf,EAFoB,yBAQnBA,GARmB,gCAU1BU,EAAAA,GAAAA,MAAY,KAAMC,SAVQ,yDAAH","sources":["constants/constants.js","components/ReviewsMovie/ReviewsMovie.styled.js","components/ReviewsMovie/ReviewsMovie.jsx","pages/MovieDetails/Reviews/Reviews.jsx","servises/api.js"],"sourcesContent":["export const API_KEY = '18a83c57cdad2caf2727c80f23ceed6b';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const base_url = 'https://image.tmdb.org/t/p/w500';\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n","import { List } from './ReviewsMovie.styled';\n\nexport const ReviewsMovie = ({ reviews }) => {\n  return (\n    <List>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <h2>{author}</h2>\n          <p>{content}</p>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'servises/api';\nimport { ReviewsMovie } from 'components/ReviewsMovie/ReviewsMovie';\nimport { useLocation } from 'react-router-dom';\n\nconst Reviews = () => {\n  const location = useLocation();\n  const movieId = Number(location.state.id);\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const response = await getMovieReviews(movieId);\n      setReviews(response.data.results);\n    };\n    getReviews();\n  }, [movieId]);\n\n  return <ReviewsMovie reviews={reviews} />;\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nconst movieApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async () => {\n  try {\n    const response = await movieApi.get('/trending/movie/day');\n\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const infoMovie = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/reviews`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/credits`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await movieApi.get(`/search/movie`, {\n      params: {\n        query,\n      },\n    });\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n"],"names":["API_KEY","BASE_URL","base_url","List","styled","ReviewsMovie","reviews","map","id","author","content","location","useLocation","movieId","Number","state","useState","setReviews","useEffect","getReviews","getMovieReviews","response","data","results","movieApi","axios","baseURL","params","api_key","searchMovies","get","toast","message","infoMovie","getMovieCredits","getMovieSearch","query"],"sourceRoot":""}