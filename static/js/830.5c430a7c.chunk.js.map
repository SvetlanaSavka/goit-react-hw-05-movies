{"version":3,"file":"static/js/830.5c430a7c.chunk.js","mappings":"yRAEaA,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAArB,WACE,wBAAKC,KACL,uBAAIC,QAHCF,SCFJI,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACMC,EAAAA,EAAAA,IAAgBL,GADtB,OACXM,EADW,OAEjBJ,EAAWI,EAASC,KAAKC,SAFR,2CAAH,qDAIhBJ,MACC,CAACJ,IACJS,QAAQC,IAAIjB,IAEV,+BACE,SAACD,EAAD,CAAcC,QAASA,OCfhBkB,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,wBACGA,EAAQlB,KAAI,gBAAGC,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAP,OACX,yBACE,SAAC,KAAD,CAAMf,GAAE,eAAUH,GAAlB,UACE,wBAAKkB,OAFAlB,SCFJmB,EAAU,SAAC,GAAiB,IAAfd,EAAc,EAAdA,QACxB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOW,EAAP,KAAgBG,EAAhB,KAUA,OARAZ,EAAAA,EAAAA,YAAU,WACR,IAAMa,EAAU,mCAAG,qGACMC,EAAAA,EAAAA,IAAgBjB,GADtB,OACXM,EADW,OAEjBS,EAAWT,EAASC,KAAKW,MAFR,2CAAH,qDAIhBF,MACC,CAAChB,KAGF,+BACE,SAACW,EAAD,CAAMC,QAASA,OCjBRO,EAAmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjC,OACE,wBACGA,EAAMC,OAAO3B,KAAI,SAAA4B,GAAK,OACrB,wBAAoBA,EAAMT,MAAjBS,EAAM3B,U,SCFV4B,E,QAAYC,GAAAA,IAAH,0CCyCtB,EAlCqB,WAAO,IAAD,IACzB,GAA0BvB,EAAAA,EAAAA,UAAS,MAAnC,eAAOmB,EAAP,KAAcK,EAAd,KAEQzB,GAAY0B,EAAAA,EAAAA,MAAZ1B,QACF2B,GAAWC,EAAAA,EAAAA,MAUjB,IARAzB,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAAe,mCAAG,qGACCC,EAAAA,EAAAA,IAAU9B,GADX,OAChBM,EADgB,OAEtBmB,EAASnB,EAASC,MAFI,2CAAH,qDAIrBsB,MACC,CAAC7B,IAECoB,EAAL,CAGA,IAAMW,EAAY,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,OACE,UAACV,EAAD,YACE,4BACE,SAAC,KAAD,CAAiBW,MAAM,KAAKC,OAAO,KAAKC,KAAK,UAC7C,SAAC,KAAD,CAAMtC,GAAIiC,EAAV,6BACA,gBAAKM,IAAI,GAAGC,IAAKlB,EAAMmB,MAAOL,MAAM,SACpC,wBAAKd,EAAMmB,SACX,uBAAInB,EAAMoB,YACV,SAACrB,EAAD,CAAkBC,MAAOA,QAE3B,oDACA,SAACN,EAAD,CAASd,QAASA,KAClB,SAACD,EAAD,CAASC,QAASA","sources":["components/ReviewsMovie/ReviewsMovie.jsx","pages/Reviews.jsx","components/Cast/Cast.jsx","pages/Credits.jsx","components/MovieInfoDitails/MovieInfoDitails.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const ReviewsMovie = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <Link to={`reviews/${id}`}>\n            <h2>{author}</h2>\n            <p>{content}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'servises/api';\nimport { ReviewsMovie } from 'components/ReviewsMovie/ReviewsMovie';\n\nexport const Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const response = await getMovieReviews(movieId);\n      setReviews(response.data.results);\n    };\n    getReviews();\n  }, [movieId]);\n  console.log(reviews);\n  return (\n    <>\n      <ReviewsMovie reviews={reviews} />\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nexport const Cast = ({ credits }) => {\n  return (\n    <ul>\n      {credits.map(({ id, name }) => (\n        <li key={id}>\n          <Link to={`cast/${id}`}>\n            <h2>{name}</h2>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'servises/api';\nimport { Cast } from 'components/Cast/Cast';\n\nexport const Credits = ({ movieId }) => {\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    const getCredits = async () => {\n      const response = await getMovieCredits(movieId);\n      setCredits(response.data.cast);\n    };\n    getCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      <Cast credits={credits} />\n    </>\n  );\n};\n","export const MovieInfoDitails = ({ movie }) => {\n  return (\n    <ul>\n      {movie.genres.map(genre => (\n        <li key={genre.id}>{genre.name}</li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\n","import { useParams, Link, useLocation } from 'react-router-dom';\nimport { WiDirectionLeft } from 'react-icons/wi';\nimport { useState, useEffect } from 'react';\nimport { infoMovie } from 'servises/api';\nimport { Reviews } from 'pages/Reviews';\nimport { Credits } from 'pages/Credits';\nimport { MovieInfoDitails } from 'components/MovieInfoDitails/MovieInfoDitails';\nimport { Container } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieDitails = async () => {\n      const response = await infoMovie(movieId);\n      setMovie(response.data);\n    };\n    getMovieDitails();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const backLinkHref = location.state?.from ?? '/movies';\n  return (\n    <Container>\n      <div>\n        <WiDirectionLeft width=\"20\" height=\"20\" fill=\"grey\" />\n        <Link to={backLinkHref}>Back to movies</Link>\n        <img src=\"\" alt={movie.title} width=\"250\" />\n        <h2>{movie.title}</h2>\n        <p>{movie.overview}</p>\n        <MovieInfoDitails movie={movie} />\n      </div>\n      <h2>Additional information</h2>\n      <Credits movieId={movieId} />\n      <Reviews movieId={movieId} />\n    </Container>\n  );\n};\nexport default MovieDetails;\n"],"names":["ReviewsMovie","reviews","map","id","author","content","to","Reviews","movieId","useState","setReviews","useEffect","getReviews","getMovieReviews","response","data","results","console","log","Cast","credits","name","Credits","setCredits","getCredits","getMovieCredits","cast","MovieInfoDitails","movie","genres","genre","Container","styled","setMovie","useParams","location","useLocation","getMovieDitails","infoMovie","backLinkHref","state","from","width","height","fill","src","alt","title","overview"],"sourceRoot":""}