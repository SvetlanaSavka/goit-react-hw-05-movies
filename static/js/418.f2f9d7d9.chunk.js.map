{"version":3,"file":"static/js/418.f2f9d7d9.chunk.js","mappings":"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","sources":["constants/constants.js","components/MovieInfoDitails/MovieInfoDitails.jsx","components/MovieDitailsAction/MovieDitailsAction.styled.js","components/MovieDitailsAction/MovieDitailsAction.jsx","components/MovieInformation/MovieInformation.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx","servises/api.js"],"sourcesContent":["export const API_KEY = '18a83c57cdad2caf2727c80f23ceed6b';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const base_url = 'https://image.tmdb.org/t/p/w500';\n","export const MovieInfoDitails = ({ movie }) => {\n  return (\n    <ul>\n      {movie.genres.map(genre => (\n        <li key={genre.id}>{genre.name}</li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\nexport const LinkStyled = styled(NavLink)`\n  display: block;\n  margin-bottom: 20px;\n  color: grey;\n`;\n","import { LinkStyled } from './MovieDitailsAction.styled';\n\nexport const MovieDitailsAction = ({ backLinkHref, movieId }) => {\n  return (\n    <>\n      <h2>Additional information</h2>\n      <LinkStyled\n        to=\"cast\"\n        state={{\n          from: backLinkHref,\n          id: movieId,\n        }}\n      >\n        Go to cast\n      </LinkStyled>\n\n      <LinkStyled\n        to=\"reviews\"\n        state={{\n          from: backLinkHref,\n          id: movieId,\n        }}\n      >\n        Go to reviews\n      </LinkStyled>\n    </>\n  );\n};\n","export const MovieInformation = ({ movie }) => {\n  const base_url = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      <img\n        src={`${base_url}${movie.profile_path ?? movie.poster_path}`}\n        alt={movie.title}\n        width=\"250\"\n      />\n\n      <h2>{movie.title}</h2>\n      <p>{movie.overview}</p>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkStyled = styled(NavLink)`\n  display: block;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  color: grey;\n`;\n","import { LinkStyled } from './BackLink.styled';\n\nexport const BackLink = ({ backLinkHref }) => {\n  return <LinkStyled to={backLinkHref}>Back to movies</LinkStyled>;\n};\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { infoMovie } from 'servises/api';\nimport { MovieInfoDitails } from 'components/MovieInfoDitails/MovieInfoDitails';\nimport { MovieDitailsAction } from 'components/MovieDitailsAction/MovieDitailsAction';\nimport { MovieInformation } from 'components/MovieInformation/MovieInformation';\nimport { BackLink } from 'components/BackLink/BackLink';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieDitails = async () => {\n      const response = await infoMovie(movieId);\n      setMovie(response.data);\n    };\n    getMovieDitails();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <>\n      <BackLink backLinkHref={backLinkHref} />\n      <MovieInformation movie={movie} />\n\n      <MovieInfoDitails movie={movie} />\n\n      <MovieDitailsAction backLinkHref={backLinkHref} movieId={movieId} />\n\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nconst movieApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async () => {\n  try {\n    const response = await movieApi.get('/trending/movie/day');\n\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const infoMovie = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/reviews`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/credits`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await movieApi.get(`/search/movie`, {\n      params: {\n        query,\n      },\n    });\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n"],"names":["API_KEY","BASE_URL","base_url","MovieInfoDitails","movie","genres","map","genre","name","id","LinkStyled","styled","NavLink","MovieDitailsAction","backLinkHref","movieId","to","state","from","MovieInformation","src","profile_path","poster_path","alt","title","width","overview","BackLink","useState","setMovie","useParams","location","useLocation","useEffect","getMovieDitails","infoMovie","response","data","movieApi","axios","baseURL","params","api_key","searchMovies","get","toast","message","getMovieReviews","getMovieCredits","getMovieSearch","query"],"sourceRoot":""}