{"version":3,"file":"static/js/263.c314a3d8.chunk.js","mappings":"wNAAO,IAAMA,EAAU,mCACVC,EAAW,+BACXC,EAAW,mC,2ICAXC,E,QAAOC,GAAAA,GAAH,6C,mBCCJC,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,SAACH,EAAD,UACGG,EAAQC,MAAM,EAAG,GAAGC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACvB,2BACE,wBAAKD,KACL,gBACEE,IACED,EAAY,UACLT,EAAAA,IADK,OACMS,GACd,0CAENE,IAAKH,EACLI,MAAM,UATDL,S,UCejB,EAjBc,WACZ,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,EAAUC,OAAOH,EAASI,MAAMV,IACtCW,QAAQC,IAAIN,GAEZ,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOhB,EAAP,KAAgBiB,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACMC,EAAAA,EAAAA,IAAgBT,GADtB,OACXU,EADW,OAEjBJ,EAAWI,EAASC,KAAKC,MAFR,2CAAH,qDAIhBJ,MACC,CAACR,KAEG,SAACZ,EAAD,CAAUC,QAASA,M,uOCftBwB,EAAWC,IAAAA,OAAa,CAC5BC,QAAS/B,EAAAA,GACTgC,OAAQ,CACNC,QAASlC,EAAAA,MAIAmC,EAAY,mCAAG,6GAEDL,EAASM,IAAI,uBAFZ,cAElBT,EAFkB,yBAIjBA,EAASC,MAJQ,gCAMxBS,EAAAA,GAAAA,MAAY,KAAMC,SANM,yDAAH,qDAUZC,EAAS,mCAAG,WAAM9B,GAAN,gGAEEqB,EAASM,IAAT,iBAAuB3B,IAFzB,cAEfkB,EAFe,yBAIdA,GAJc,gCAMrBU,EAAAA,GAAAA,MAAY,KAAMC,SANG,yDAAH,sDAUTE,EAAe,mCAAG,WAAM/B,GAAN,gGAEJqB,EAASM,IAAT,iBAAuB3B,EAAvB,aAFI,cAErBkB,EAFqB,yBAIpBA,GAJoB,gCAM3BU,EAAAA,GAAAA,MAAY,KAAMC,SANS,yDAAH,sDAUfZ,EAAe,mCAAG,WAAMjB,GAAN,gGAEJqB,EAASM,IAAT,iBAAuB3B,EAAvB,aAFI,cAErBkB,EAFqB,yBAIpBA,GAJoB,gCAM3BU,EAAAA,GAAAA,MAAY,KAAMC,SANS,yDAAH,sDAUfG,EAAc,mCAAG,WAAMC,GAAN,gGAEHZ,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNS,MAAAA,KAJsB,cAEpBf,EAFoB,yBAQnBA,GARmB,gCAU1BU,EAAAA,GAAAA,MAAY,KAAMC,SAVQ,yDAAH","sources":["constants/constants.js","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/MovieDetails/Casts/Casts.jsx","servises/api.js"],"sourcesContent":["export const API_KEY = '18a83c57cdad2caf2727c80f23ceed6b';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const base_url = 'https://image.tmdb.org/t/p/w500';\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n","import { List } from './CastList.styled';\nimport { base_url } from 'constants/constants';\n\nexport const CastList = ({ credits }) => {\n  return (\n    <List>\n      {credits.slice(0, 7).map(({ id, name, profile_path }) => (\n        <li key={id}>\n          <h2>{name}</h2>\n          <img\n            src={\n              profile_path\n                ? `${base_url}${profile_path}`\n                : 'https://avatars.githubusercontent.com/u'\n            }\n            alt={name}\n            width=\"250\"\n          />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'servises/api';\nimport { CastList } from 'components/CastList/CastList';\nimport { useLocation } from 'react-router-dom';\n\nconst Casts = () => {\n  const location = useLocation();\n  const movieId = Number(location.state.id);\n  console.log(location);\n\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    const getCredits = async () => {\n      const response = await getMovieCredits(movieId);\n      setCredits(response.data.cast);\n    };\n    getCredits();\n  }, [movieId]);\n\n  return <CastList credits={credits} />;\n};\nexport default Casts;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BASE_URL, API_KEY } from 'constants/constants';\n\nconst movieApi = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchMovies = async () => {\n  try {\n    const response = await movieApi.get('/trending/movie/day');\n\n    return response.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const infoMovie = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/reviews`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await movieApi.get(`/movie/${id}/credits`);\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieSearch = async query => {\n  try {\n    const response = await movieApi.get(`/search/movie`, {\n      params: {\n        query,\n      },\n    });\n\n    return response;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n"],"names":["API_KEY","BASE_URL","base_url","List","styled","CastList","credits","slice","map","id","name","profile_path","src","alt","width","location","useLocation","movieId","Number","state","console","log","useState","setCredits","useEffect","getCredits","getMovieCredits","response","data","cast","movieApi","axios","baseURL","params","api_key","searchMovies","get","toast","message","infoMovie","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}