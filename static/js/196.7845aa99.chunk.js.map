{"version":3,"file":"static/js/196.7845aa99.chunk.js","mappings":"yQAAaA,EAAmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjC,OACE,wBACGA,EAAMC,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAME,U,4BCDVC,EAAYC,EAAAA,GAAAA,IAAH,0CAGTC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mFC+DvB,EA/DqB,WAAO,IAAD,MACzB,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOV,EAAP,KAAcW,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAUjB,IARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACCC,EAAAA,EAAAA,IAAUN,GADX,OAChBO,EADgB,OAEtBR,EAASQ,EAASC,MAFI,2CAAH,qDAIrBH,MACC,CAACL,IAECZ,EAAL,CAGA,IAAMqB,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAM7C,OAFAC,QAAQC,IAAIzB,IAGV,UAACM,EAAD,YACE,4BACE,SAACE,EAAD,CAAYkB,GAAIL,EAAhB,6BAEA,gBACEM,IAAG,UAVM,mCAUN,iBAAgB3B,EAAM4B,oBAAtB,QAAsC5B,EAAM6B,aAC/CC,IAAK9B,EAAM+B,MACXC,MAAM,SAGR,wBAAKhC,EAAM+B,SACX,uBAAI/B,EAAMiC,YACV,SAAClC,EAAD,CAAkBC,MAAOA,QAE3B,oDACA,SAACQ,EAAD,CACEkB,GAAG,OACHJ,MAAO,CACLC,KAAMF,EACNhB,GAAIO,GAJR,yBAUA,SAACJ,EAAD,CACEkB,GAAG,UACHJ,MAAO,CACLC,KAAMF,EACNhB,GAAIO,GAJR,4BAUA,SAAC,KAAD","sources":["components/MovieInfoDitails/MovieInfoDitails.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const MovieInfoDitails = ({ movie }) => {\n  return (\n    <ul>\n      {movie.genres.map(genre => (\n        <li key={genre.id}>{genre.name}</li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\nexport const LinkStyled = styled(NavLink)`\n  display: block;\n  margin-bottom: 20px;\n  color: grey;\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { infoMovie } from 'servises/api';\nimport { MovieInfoDitails } from 'components/MovieInfoDitails/MovieInfoDitails';\nimport { Container, LinkStyled } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieDitails = async () => {\n      const response = await infoMovie(movieId);\n      setMovie(response.data);\n    };\n    getMovieDitails();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const base_url = 'https://image.tmdb.org/t/p/w500';\n\n  console.log(movie);\n\n  return (\n    <Container>\n      <div>\n        <LinkStyled to={backLinkHref}>Back to movies</LinkStyled>\n\n        <img\n          src={`${base_url}${movie.profile_path ?? movie.poster_path}`}\n          alt={movie.title}\n          width=\"250\"\n        />\n\n        <h2>{movie.title}</h2>\n        <p>{movie.overview}</p>\n        <MovieInfoDitails movie={movie} />\n      </div>\n      <h2>Additional information</h2>\n      <LinkStyled\n        to=\"cast\"\n        state={{\n          from: backLinkHref,\n          id: movieId,\n        }}\n      >\n        Go to cast\n      </LinkStyled>\n\n      <LinkStyled\n        to=\"reviews\"\n        state={{\n          from: backLinkHref,\n          id: movieId,\n        }}\n      >\n        Go to reviews\n      </LinkStyled>\n\n      <Outlet />\n    </Container>\n  );\n};\nexport default MovieDetails;\n"],"names":["MovieInfoDitails","movie","genres","map","genre","name","id","Container","styled","LinkStyled","NavLink","useState","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieDitails","infoMovie","response","data","backLinkHref","state","from","console","log","to","src","profile_path","poster_path","alt","title","width","overview"],"sourceRoot":""}